/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.sql.Connection; //import library untuk menjalankan fungsi2nya
import java.sql.PreparedStatement;//import library untuk menjalankan fungsi2nya
import java.sql.ResultSet;//import library untuk menjalankan fungsi2nya
import java.sql.SQLException;//import library untuk menjalankan fungsi2nya
import java.sql.Statement;//import library untuk menjalankan fungsi2nya
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;//import library untuk menjalankan fungsi2nya
import java.util.logging.Logger;//import library untuk menjalankan fungsi2nya
import javax.swing.JOptionPane;//import library untuk menjalankan fungsi2nya
import javax.swing.table.DefaultTableModel;//import library untuk menjalankan fungsi2nya
import model.koneksi;//import library untuk menjalankan fungsi2nya
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;
import sun.util.logging.PlatformLogger;//import library untuk menjalankan fungsi2nya

/**
 *
 * @author Kellman N. Gunawan
 */
public class cari extends javax.swing.JFrame {

    /**
     * Creates new form cari
     */
    String sql; //sql tipe data string
    Connection con; //con mewakili conection
    Statement stm; //stm mewakili statement
    ResultSet rs; //rs mewakili resultset
    
    int gthb = 0; //int gthb bernilai 0
    int gthj = 0; //int gthj bernilai 0

private void Display_data(){ //method displaydata
        koneksi DB = new koneksi(); //objek koneksi
        DB.koneksi(); //db koneksi
        con=DB.con; //con mewakili dbcon
        stm=DB.stm; // stm mewakili dbstm
        
        DefaultTableModel Model = new DefaultTableModel(); //object defaulttablemodel
        Model.addColumn("Kode"); //menambah kolom kode
        Model.addColumn("Nama obat"); // menambah kolom nama obat
        Model.addColumn("Kd_kategori"); //menambah kolom kdkategori
        Model.addColumn("Kategori"); //menambah kolom kategori
        Model.addColumn("Kadaluarsa"); //menambah kolom kadaluarsa
        Model.addColumn("Keterangan"); //menambah kolom keterangan
        Model.addColumn("Harga Beli"); //menambah kolom hargabeli
        Model.addColumn("Harga Jual"); //menambah kolom harga jua
        Model.addColumn("Kuantitas"); //menambah kolom kuantitas
        Model.addColumn("Total harga beli"); //menambah kolom totalhargabeli
        Model.addColumn("Total harga jual"); //menambah kolom total harga jual
        
        
        try//statement try
        {
            String sql = "SELECT * FROM tblinput WHERE Kode BETWEEN '" + dari.getText()+ "' AND '" + sampai.getText()+"'"; //url sql
            
            rs = stm.executeQuery(sql);//Metode ini digunakan untuk mengeksekusi pernyataan yang mengembalikan data yang terstruktur ke dalam baris, 

            while(rs.next()) //Mengembalikan nilai berikutnya jika cocok dengan pola yang dibuat dari string yang ditentukan.
            {   
                  Model.addRow(new Object[]{rs.getString("Kode"), rs.getString("Nama_Obat"),  //menambahkan baris
                    rs.getString("Kd_kategori"), rs.getString("Kategori"),rs.getString("Kadaluarsa"),rs.getString("Keterangan") //menambahkan barus
                    ,rs.getString("HargaBeli"),rs.getString("Harga_Jual"),rs.getString("Kuantitas"),rs.getString("Total_harga_beli"),rs.getString("Total_harga_jual")});//menambahkan baris

            }
            tabelcari.setModel(Model); //set model tabel 

        } catch (Exception e) //akan aktif jika try gagal
            {
            JOptionPane.showMessageDialog(this, e.getMessage()); //Jika ada error di method showTable, maka akan menampilkan popup errornya dimana
          }
        
        
}
   
    public cari(){ //method cari
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabelcari = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        dari = new javax.swing.JTextField();
        sampai = new javax.swing.JTextField();
        cari = new javax.swing.JButton();
        kembali = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        cetak = new javax.swing.JButton();
        thj = new javax.swing.JTextField();
        thb = new javax.swing.JTextField();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tabelcari.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Kode", "Nama obat", "kd_kategori", "Kategori", "kadaluarsa", "keterangan", "Harga Beli", "Harga Jual", "Kuantitas", "Total harga beli", "Total harga jual"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabelcari);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 1160, 200));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("CARI OBAT");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1200, 60));

        jLabel2.setText("Dari Kode");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(252, 82, -1, -1));

        jLabel3.setText("Sampai Kode");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(252, 135, -1, -1));
        getContentPane().add(dari, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 79, 94, -1));
        getContentPane().add(sampai, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 132, 94, -1));

        cari.setText("Cari");
        cari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cariActionPerformed(evt);
            }
        });
        getContentPane().add(cari, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 78, 84, -1));

        kembali.setText("kembali");
        kembali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kembaliActionPerformed(evt);
            }
        });
        getContentPane().add(kembali, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 420, 120, 40));

        jLabel4.setText("TOTAL          :");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 410, 110, 40));

        cetak.setText("Cetak");
        cetak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cetakActionPerformed(evt);
            }
        });
        getContentPane().add(cetak, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 130, 90, -1));
        getContentPane().add(thj, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 420, 100, -1));

        thb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                thbActionPerformed(evt);
            }
        });
        getContentPane().add(thb, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 420, 110, -1));

        jTextField1.setEditable(false);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 70, 450, 100));

        jTextField2.setEditable(false);
        jTextField2.setBackground(new java.awt.Color(255, 0, 0));
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1200, 60));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/carijpg.jpg"))); // NOI18N
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cariActionPerformed
        // TODO add your handling code here:   
        Display_data(); //memanggil method
       for(int i = 0; i < tabelcari.getRowCount(); i++){ //for increment
                int tempb = Integer.parseInt(tabelcari.getValueAt(i, 9).toString()); //int tempb mengkonversi nilai dari tabel cari ke int
                gthb += tempb; //rumus gthb
                int tempj = Integer.parseInt(tabelcari.getValueAt(i, 10).toString()); //int tempj mengkonversi nilai dari tabel cari ke int
                gthj += tempj; //rumus gthj
                }
        thb.setText("" + gthb); //menampilkan gthb ke thbsettext
        thj.setText("" + gthj); //menampilkan gthj ke thjsettext
    }//GEN-LAST:event_cariActionPerformed

    private void kembaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kembaliActionPerformed
        // TODO add your handling code here:
        new input().setVisible(true); //tombol untuk pindah ke form input
        dispose();
    }//GEN-LAST:event_kembaliActionPerformed

    private void thbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_thbActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_thbActionPerformed

    private void cetakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cetakActionPerformed
        // TODO add your handling code here:
        koneksi DB = new koneksi();                                             //inisialisi DB untuk pemanggilan class Koneksi
        DB.koneksi();                                                           //memanggil kelas koneksi
        Connection con = DB.con;                                                //connection con mewakili dbcon
        stm = DB.stm;                                                             // stm mewakili dbstm
        Map parameters = new HashMap();                                         // sebuah class dengan nama MAP yang didalamnya memiliki parameters yang didalamnya menyimpan HasMap
        parameters.put("cari Dari Kode", dari.getText());              // parameters yang digunakan pada Jasper dengan variabel dari
        parameters.put("Sampai Kode", sampai.getText());          // parameters yanga digunakan pada Jasper dengan variabel sampai

        try{                        // statment try
            String fileDirectory = System.getProperty("user.dir") + "\\src\\view\\reportuas.jrxml";      // lokasi file report
            String file = fileDirectory;                                                                    // sebuah file dengan tipe daya String menjadi fileDirectory
            JasperReport jr = JasperCompileManager.compileReport(file);                                     // JasperReport jr = untuk membuat connection kepada filemcompile report
            JasperPrint jp = JasperFillManager.fillReport(jr,parameters,con);                               // jasper Print = untuk menggonectkan dengan perintah( jr,parameter,con)
            JasperViewer.viewReport(jp);                                                                    // mengeluarkan tampilan jasper
        } catch(Exception e){                                                                               // catch menangkap error
            e.printStackTrace();                                                                            // menampilkan error
        }
    }//GEN-LAST:event_cetakActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(cari.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(cari.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(cari.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(cari.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new cari().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cari;
    private javax.swing.JButton cetak;
    private javax.swing.JTextField dari;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JButton kembali;
    private javax.swing.JTextField sampai;
    private javax.swing.JTable tabelcari;
    private javax.swing.JTextField thb;
    private javax.swing.JTextField thj;
    // End of variables declaration//GEN-END:variables

   
}
